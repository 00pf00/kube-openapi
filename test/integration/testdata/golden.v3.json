{
  "openapi": "3.0.0",
  "info": {
   "title": "Integration Test",
   "version": "1.0"
  },
  "paths": {
   "/test/custom": {
    "post": {
     "operationId": "create-custom.Bah",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/custom.Bah"
         }
        }
       }
      }
     }
    }
   },
   "/test/custom/bac": {
    "get": {
     "operationId": "get-custom.Bac",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/custom.Bac"
         }
        }
       }
      }
     }
    }
   },
   "/test/custom/bah": {
    "get": {
     "operationId": "get-custom.Bah",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/custom.Bah"
         }
        }
       }
      }
     }
    }
   },
   "/test/custom/bak": {
    "get": {
     "operationId": "get-custom.Bak",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/custom.Bak"
         }
        }
       }
      }
     }
    }
   },
   "/test/custom/bal": {
    "get": {
     "operationId": "get-custom.Bal",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/custom.Bal"
         }
        }
       }
      }
     }
    }
   },
   "/test/defaults": {
    "post": {
     "operationId": "create-defaults.Defaulted",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/defaults.Defaulted"
         }
        }
       }
      }
     }
    }
   },
   "/test/defaults/defaulted": {
    "get": {
     "operationId": "get-defaults.Defaulted",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/defaults.Defaulted"
         }
        }
       }
      }
     }
    }
   },
   "/test/dummytype": {
    "post": {
     "operationId": "create-dummytype.Waldo",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/dummytype.Waldo"
         }
        }
       }
      },
      "500": {
       "description": "Internal Service Error",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/dummytype.StatusError"
         }
        }
       }
      }
     }
    }
   },
   "/test/dummytype/bar": {
    "get": {
     "operationId": "get-dummytype.Bar",
     "responses": {
      "500": {
       "description": "Internal Service Error",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/dummytype.StatusError"
         }
        }
       }
      }
     }
    }
   },
   "/test/dummytype/baz": {
    "get": {
     "operationId": "get-dummytype.Baz",
     "responses": {
      "500": {
       "description": "Internal Service Error",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/dummytype.StatusError"
         }
        }
       }
      }
     }
    }
   },
   "/test/dummytype/foo": {
    "get": {
     "operationId": "get-dummytype.Foo",
     "responses": {
      "500": {
       "description": "Internal Service Error",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/dummytype.StatusError"
         }
        }
       }
      }
     }
    }
   },
   "/test/dummytype/waldo": {
    "get": {
     "operationId": "get-dummytype.Waldo",
     "responses": {
      "500": {
       "description": "Internal Service Error",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/dummytype.StatusError"
         }
        }
       }
      }
     }
    }
   },
   "/test/listtype": {
    "post": {
     "operationId": "create-listtype.SetList",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/listtype.SetList"
         }
        }
       }
      }
     }
    }
   },
   "/test/listtype/atomiclist": {
    "get": {
     "operationId": "get-listtype.AtomicList",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/listtype.AtomicList"
         }
        }
       }
      }
     }
    }
   },
   "/test/listtype/maplist": {
    "get": {
     "operationId": "get-listtype.MapList",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/listtype.MapList"
         }
        }
       }
      }
     }
    }
   },
   "/test/listtype/setlist": {
    "get": {
     "operationId": "get-listtype.SetList",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/listtype.SetList"
         }
        }
       }
      }
     }
    }
   },
   "/test/maptype": {
    "post": {
     "operationId": "create-maptype.AtomicMap",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/maptype.AtomicMap"
         }
        }
       }
      }
     }
    }
   },
   "/test/maptype/atomicmap": {
    "get": {
     "operationId": "get-maptype.AtomicMap",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/maptype.AtomicMap"
         }
        }
       }
      }
     }
    }
   },
   "/test/maptype/granularmap": {
    "get": {
     "operationId": "get-maptype.GranularMap",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/maptype.GranularMap"
         }
        }
       }
      }
     }
    }
   },
   "/test/structtype": {
    "post": {
     "operationId": "create-structtype.DeclaredAtomicStruct",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/structtype.DeclaredAtomicStruct"
         }
        }
       }
      }
     }
    }
   },
   "/test/structtype/atomicstruct": {
    "get": {
     "operationId": "get-structtype.AtomicStruct",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/structtype.AtomicStruct"
         }
        }
       }
      }
     }
    }
   },
   "/test/structtype/declaredatomicstruct": {
    "get": {
     "operationId": "get-structtype.DeclaredAtomicStruct",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/structtype.DeclaredAtomicStruct"
         }
        }
       }
      }
     }
    }
   },
   "/test/structtype/granularstruct": {
    "get": {
     "operationId": "get-structtype.GranularStruct",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/structtype.GranularStruct"
         }
        }
       }
      }
     }
    }
   },
   "/test/uniontype": {
    "post": {
     "operationId": "create-uniontype.InlinedUnion",
     "responses": {
      "201": {
       "description": "Created",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/uniontype.InlinedUnion"
         }
        }
       }
      }
     }
    }
   },
   "/test/uniontype/inlinedunion": {
    "get": {
     "operationId": "get-uniontype.InlinedUnion",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/uniontype.InlinedUnion"
         }
        }
       }
      }
     }
    }
   },
   "/test/uniontype/toplevelunion": {
    "get": {
     "operationId": "get-uniontype.TopLevelUnion",
     "responses": {
      "200": {
       "description": "OK",
       "content": {
        "application/json": {
         "schema": {
          "$ref": "#/components/schemas/uniontype.TopLevelUnion"
         }
        }
       }
      }
     }
    }
   }
  },
  "components": {
   "schemas": {
    "custom.Bac": {
     "type": "object"
    },
    "custom.Bah": {
     "type": "object"
    },
    "custom.Bak": {
     "type": "integer"
    },
    "custom.Bal": {
     "type": "string"
    },
    "defaults.Defaulted": {
     "type": "object",
     "required": [
      "OtherField",
      "List",
      "Sub",
      "OtherSub",
      "Map"
     ],
     "properties": {
      "Field": {
       "type": "string",
       "default": "bar"
      },
      "List": {
       "type": "array",
       "default": [
        "foo",
        "bar"
       ],
       "items": {
        "type": "string",
        "default": ""
       }
      },
      "Map": {
       "type": "object",
       "default": {
        "foo": "bar"
       },
       "additionalProperties": {
        "type": "string",
        "default": ""
       }
      },
      "OtherField": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "OtherSub": {
       "default": {},
       "$ref": "#/components/schemas/defaults.SubStruct"
      },
      "Sub": {
       "default": {
        "i": 5,
        "s": "foo"
       },
       "$ref": "#/components/schemas/defaults.SubStruct"
      }
     }
    },
    "defaults.SubStruct": {
     "type": "object",
     "required": [
      "S"
     ],
     "properties": {
      "I": {
       "type": "integer",
       "format": "int32",
       "default": 1
      },
      "S": {
       "type": "string",
       "default": ""
      }
     }
    },
    "dummytype.Bar": {
     "type": "object",
     "required": [
      "ViolationBehind",
      "Violation"
     ],
     "properties": {
      "Violation": {
       "type": "boolean",
       "default": false
      },
      "ViolationBehind": {
       "type": "boolean",
       "default": false
      }
     }
    },
    "dummytype.Baz": {
     "type": "object",
     "required": [
      "Violation",
      "ViolationBehind"
     ],
     "properties": {
      "Violation": {
       "type": "boolean",
       "default": false
      },
      "ViolationBehind": {
       "type": "boolean",
       "default": false
      }
     }
    },
    "dummytype.Foo": {
     "type": "object",
     "required": [
      "Second",
      "First"
     ],
     "properties": {
      "First": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "Second": {
       "type": "string",
       "default": ""
      }
     }
    },
    "dummytype.StatusError": {
     "type": "object",
     "required": [
      "Code",
      "Message"
     ],
     "properties": {
      "Code": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "Message": {
       "type": "string",
       "default": ""
      }
     }
    },
    "dummytype.Waldo": {
     "type": "object",
     "required": [
      "First",
      "Second"
     ],
     "properties": {
      "First": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "Second": {
       "type": "string",
       "default": ""
      }
     }
    },
    "listtype.AtomicList": {
     "type": "object",
     "required": [
      "Field"
     ],
     "properties": {
      "Field": {
       "type": "array",
       "items": {
        "type": "string",
        "default": ""
       },
       "x-kubernetes-list-type": "atomic"
      }
     }
    },
    "listtype.Item": {
     "type": "object",
     "required": [
      "Protocol",
      "Port"
     ],
     "properties": {
      "Port": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "Protocol": {
       "type": "string",
       "default": ""
      },
      "a": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "b": {
       "type": "integer",
       "format": "int32"
      },
      "c": {
       "type": "integer",
       "format": "int32",
       "default": 0
      }
     }
    },
    "listtype.MapList": {
     "type": "object",
     "required": [
      "Field"
     ],
     "properties": {
      "Field": {
       "type": "array",
       "items": {
        "default": {},
        "$ref": "#/components/schemas/listtype.Item"
       },
       "x-kubernetes-list-map-keys": [
        "port"
       ],
       "x-kubernetes-list-type": "map"
      }
     }
    },
    "listtype.SetList": {
     "type": "object",
     "required": [
      "Field"
     ],
     "properties": {
      "Field": {
       "type": "array",
       "items": {
        "type": "string",
        "default": ""
       },
       "x-kubernetes-list-type": "set"
      }
     }
    },
    "maptype.AtomicMap": {
     "type": "object",
     "required": [
      "KeyValue"
     ],
     "properties": {
      "KeyValue": {
       "type": "object",
       "additionalProperties": {
        "type": "string",
        "default": ""
       },
       "x-kubernetes-map-type": "atomic"
      }
     }
    },
    "maptype.GranularMap": {
     "type": "object",
     "required": [
      "KeyValue"
     ],
     "properties": {
      "KeyValue": {
       "type": "object",
       "additionalProperties": {
        "type": "string",
        "default": ""
       },
       "x-kubernetes-map-type": "granular"
      }
     }
    },
    "structtype.AtomicStruct": {
     "type": "object",
     "required": [
      "Field",
      "OtherField"
     ],
     "properties": {
      "Field": {
       "default": {},
       "x-kubernetes-map-type": "atomic",
       "$ref": "#/components/schemas/structtype.ContainedStruct"
      },
      "OtherField": {
       "type": "integer",
       "format": "int32",
       "default": 0
      }
     }
    },
    "structtype.ContainedStruct": {
     "type": "object"
    },
    "structtype.DeclaredAtomicStruct": {
     "type": "object",
     "required": [
      "Field"
     ],
     "properties": {
      "Field": {
       "type": "integer",
       "format": "int32",
       "default": 0
      }
     },
     "x-kubernetes-map-type": "atomic"
    },
    "structtype.GranularStruct": {
     "type": "object",
     "required": [
      "Field",
      "OtherField"
     ],
     "properties": {
      "Field": {
       "default": {},
       "x-kubernetes-map-type": "granular",
       "$ref": "#/components/schemas/structtype.ContainedStruct"
      },
      "OtherField": {
       "type": "integer",
       "format": "int32",
       "default": 0
      }
     }
    },
    "uniontype.InlinedUnion": {
     "type": "object",
     "required": [
      "name",
      "type"
     ],
     "properties": {
      "alpha": {
       "type": "integer",
       "format": "int32"
      },
      "beta": {
       "type": "integer",
       "format": "int32"
      },
      "field1": {
       "type": "integer",
       "format": "int32"
      },
      "field2": {
       "type": "integer",
       "format": "int32"
      },
      "fieldA": {
       "type": "integer",
       "format": "int32"
      },
      "fieldB": {
       "type": "integer",
       "format": "int32"
      },
      "name": {
       "type": "string",
       "default": ""
      },
      "type": {
       "type": "string",
       "default": ""
      },
      "unionType": {
       "type": "string",
       "default": ""
      }
     },
     "x-kubernetes-unions": [
      {
       "discriminator": "unionType",
       "fields-to-discriminateBy": {
        "fieldA": "FieldA",
        "fieldB": "FieldB"
       }
      },
      {
       "discriminator": "type",
       "fields-to-discriminateBy": {
        "alpha": "Alpha",
        "beta": "Beta"
       }
      },
      {
       "fields-to-discriminateBy": {
        "field1": "Field1",
        "field2": "Field2"
       }
      }
     ]
    },
    "uniontype.TopLevelUnion": {
     "type": "object",
     "required": [
      "name"
     ],
     "properties": {
      "fieldA": {
       "type": "integer",
       "format": "int32"
      },
      "fieldB": {
       "type": "integer",
       "format": "int32"
      },
      "name": {
       "type": "string",
       "default": ""
      },
      "unionType": {
       "type": "string",
       "default": ""
      }
     },
     "x-kubernetes-unions": [
      {
       "discriminator": "unionType",
       "fields-to-discriminateBy": {
        "fieldA": "FieldA",
        "fieldB": "FieldB"
       }
      }
     ]
    }
   }
  }
 }